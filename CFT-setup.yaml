AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy Node.js + React.js app with Nginx reverse proxy on EC2 using NAT Gateway

Parameters:
  KeyName:
    Description: EC2 KeyPair for SSH access
    Type: AWS::EC2::KeyPair::KeyName
  InstanceType:
    Type: String
    Default: t3.micro
  AppPort:
    Type: Number
    Default: 3000

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags: [{ Key: Name, Value: ReactAppVPC }]

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      AvailabilityZone: ap-south-1a
      Tags: [{ Key: Name, Value: PublicSubnet }]

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: ap-south-1a
      Tags: [{ Key: Name, Value: PrivateSubnet }]

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NATGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt EIP.AllocationId
      SubnetId: !Ref PublicSubnet

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC

  PrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NATGateway

  PrivateRouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet
      RouteTableId: !Ref PrivateRouteTable

  PublicSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and HTTP
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0

  PrivateSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow AppPort and SSH from Public SG
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref PublicSecurityGroup
        - IpProtocol: tcp
          FromPort: !Ref AppPort
          ToPort: !Ref AppPort
          SourceSecurityGroupId: !Ref PublicSecurityGroup

  PublicInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: ami-0cd173613e262de82
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds: [!Ref PublicSecurityGroup]
      Tags:
        - Key: Name
          Value: PublicInstance
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update -y
          apt install -y nginx
          cat <<EOF > /etc/nginx/sites-available/react-proxy
          server {
              listen 80;
              server_name localhost;
              location / {
                  proxy_pass http://${PrivateInstance.PrivateIp}:$AppPort;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade \$http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host \$host;
                  proxy_cache_bypass \$http_upgrade;
              }
          }
          EOF
          ln -s /etc/nginx/sites-available/react-proxy /etc/nginx/sites-enabled/
          nginx -t && systemctl restart nginx

  PrivateInstance:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: ami-0cd173613e262de82
      SubnetId: !Ref PrivateSubnet
      SecurityGroupIds: [!Ref PrivateSecurityGroup]
      Tags:
        - Key: Name
          Value: PrivateInstance
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          apt update && apt upgrade -y
          curl -fsSL https://deb.nodesource.com/setup_20.x | bash -
          apt install -y nodejs
          npm install -g create-react-app
          npx create-react-app demo-react-app
          cd demo-react-app
          npm install
          npm start &

Outputs:
  PublicIP:
    Description: Public IP of the Nginx EC2
    Value: !GetAtt PublicInstance.PublicIp
